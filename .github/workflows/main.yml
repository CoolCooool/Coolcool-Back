name: CI

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.SUBMODULE_ACCESS_TOKEN }}
        submodules: true
    - name: Checkout
      uses: actions/checkout@v3
    - name: npm install and build webpack
      run:  |
        bash ./scripts/postgresql-install-linux.sh
        npm install
        npm run build
    - uses: actions/upload-artifact@master
      with:
        name: webpack artifacts
        path: public/

  test:
    needs: [build] 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [18.x]
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/download-artifact@master
        with:
          name: webpack artifacts
          path: public
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/node_modules
          key: npm-packages-${{ hashFiles('**/package-lock.json') }}
        id: cache

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Linter
        run: npm run lint

      - name: Test
        run: |
          bash ./scripts/postgresql-setup.sh testpass
          npm run test
